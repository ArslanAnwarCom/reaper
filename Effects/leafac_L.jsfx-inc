/*
Pages for multiple colors.
Better way of representing colors so that we can loop in JSFX.
Try to use gfx_x/y instead of box__x/y.


Maybe we should have a fixed palette for font configurations 8 sizes/ bold or not/ always arial
letter-spacing
border-width
opacity
rotate
scale
brightness
contrast
saturate
animations
  transition-duration
  transition-timing-function
colorpicker???
Basic algorithms
  Sorting
  Searching
  Bézier
  Hyperbolic trigonometric functions
Document
  Dimensions for the @gfx block can’t use functions
  You must call the initializers
  How to manage different font sizes/styles/decoration
  why always arial (because of retina + operating system font support)
    workaround (render every text in the interface as images)
  Enumerations
  _rounded_rectangle_fill can’t be used with opacity < 1
*/

@init

// @init INITIALIZATION

gfx_ext_retina = 1;

// DATA STRUCTURES

_ENUMERATION = 0;
function _enumeration() global(_ENUMERATION) (
  _ENUMERATION += 1;
);

// DESIGN SYSTEM
// https://github.com/leafac/css/blob/f1fb7bdc73f1cf7afcffcc61222c36f1c1ff0702/source/index.ts
/*
// rem → px
`___`.replace(/([\d.]+)rem/g, (_, rem) => Number(rem) * 16);
*/

// FONT SIZES

_FONT_SIZE__EXTRA_SMALL__2 = _enumeration();
_LINE_HEIGHT__EXTRA_SMALL__2 = _enumeration();
_FONT_SIZE__EXTRA_SMALL = _enumeration();
_LINE_HEIGHT__EXTRA_SMALL = _enumeration();
_FONT_SIZE__SMALL = _enumeration();
_LINE_HEIGHT__SMALL = _enumeration();
_FONT_SIZE__BASE = _enumeration();
_LINE_HEIGHT__BASE = _enumeration();
_FONT_SIZE__LARGE = _enumeration();
_LINE_HEIGHT__LARGE = _enumeration();
_FONT_SIZE__EXTRA_LARGE = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE = _enumeration();
_FONT_SIZE__EXTRA_LARGE__2 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__2 = _enumeration();
_FONT_SIZE__EXTRA_LARGE__3 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__3 = _enumeration();
_FONT_SIZE__EXTRA_LARGE__4 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__4 = _enumeration();
_FONT_SIZE__EXTRA_LARGE__5 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__5 = _enumeration();
_FONT_SIZE__EXTRA_LARGE__6 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__6 = _enumeration();
_FONT_SIZE__EXTRA_LARGE__7 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__7 = _enumeration();
_FONT_SIZE__EXTRA_LARGE__8 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__8 = _enumeration();
_FONT_SIZE__EXTRA_LARGE__9 = _enumeration();
_LINE_HEIGHT__EXTRA_LARGE__9 = _enumeration();

// FONT STYLES

_FONT_STYLE__REGULAR = _enumeration();
_FONT_STYLE__BOLD = _enumeration();
_FONT_STYLE__ITALIC = _enumeration();
_FONT_STYLE__BOLD_ITALIC = _enumeration();

// TEXT ALIGNMENTS

_TEXT_ALIGN__HORIZONTAL__LEFT = _enumeration();
_TEXT_ALIGN__HORIZONTAL__CENTER = _enumeration();
_TEXT_ALIGN__HORIZONTAL__RIGHT = _enumeration();
_TEXT_ALIGN__VERTICAL__TOP = _enumeration();
_TEXT_ALIGN__VERTICAL__CENTER = _enumeration();
_TEXT_ALIGN__VERTICAL__BOTTOM = _enumeration();
_TEXT_ALIGN__OVERFLOW__VISIBLE = _enumeration();

// WIDTHS

_WIDTH__0 = _enumeration();
_WIDTH__EXTRA_SMALL = _enumeration();
_WIDTH__SMALL = _enumeration();
_WIDTH__MEDIUM = _enumeration();
_WIDTH__LARGE = _enumeration();
_WIDTH__EXTRA_LARGE = _enumeration();
_WIDTH__EXTRA_LARGE__2 = _enumeration();
_WIDTH__EXTRA_LARGE__3 = _enumeration();
_WIDTH__EXTRA_LARGE__4 = _enumeration();
_WIDTH__EXTRA_LARGE__5 = _enumeration();
_WIDTH__EXTRA_LARGE__6 = _enumeration();
_WIDTH__EXTRA_LARGE__7 = _enumeration();
_WIDTH__PROSE = _enumeration();

// SPACES

_SPACE___96 = _enumeration();
_SPACE___80 = _enumeration();
_SPACE___72 = _enumeration();
_SPACE___64 = _enumeration();
_SPACE___60 = _enumeration();
_SPACE___56 = _enumeration();
_SPACE___52 = _enumeration();
_SPACE___48 = _enumeration();
_SPACE___44 = _enumeration();
_SPACE___40 = _enumeration();
_SPACE___36 = _enumeration();
_SPACE___32 = _enumeration();
_SPACE___28 = _enumeration();
_SPACE___24 = _enumeration();
_SPACE___20 = _enumeration();
_SPACE___16 = _enumeration();
_SPACE___14 = _enumeration();
_SPACE___12 = _enumeration();
_SPACE___11 = _enumeration();
_SPACE___10 = _enumeration();
_SPACE___9 = _enumeration();
_SPACE___8 = _enumeration();
_SPACE___7 = _enumeration();
_SPACE___6 = _enumeration();
_SPACE___5 = _enumeration();
_SPACE___4 = _enumeration();
_SPACE___3_5 = _enumeration();
_SPACE___3 = _enumeration();
_SPACE___2_5 = _enumeration();
_SPACE___2 = _enumeration();
_SPACE___1_5 = _enumeration();
_SPACE___1 = _enumeration();
_SPACE___0_5 = _enumeration();
_SPACE___PX = _enumeration();
_SPACE__0 = _enumeration();
_SPACE__PX = _enumeration();
_SPACE__0_5 = _enumeration();
_SPACE__1 = _enumeration();
_SPACE__1_5 = _enumeration();
_SPACE__2 = _enumeration();
_SPACE__2_5 = _enumeration();
_SPACE__3 = _enumeration();
_SPACE__3_5 = _enumeration();
_SPACE__4 = _enumeration();
_SPACE__5 = _enumeration();
_SPACE__6 = _enumeration();
_SPACE__7 = _enumeration();
_SPACE__8 = _enumeration();
_SPACE__9 = _enumeration();
_SPACE__10 = _enumeration();
_SPACE__11 = _enumeration();
_SPACE__12 = _enumeration();
_SPACE__14 = _enumeration();
_SPACE__16 = _enumeration();
_SPACE__20 = _enumeration();
_SPACE__24 = _enumeration();
_SPACE__28 = _enumeration();
_SPACE__32 = _enumeration();
_SPACE__36 = _enumeration();
_SPACE__40 = _enumeration();
_SPACE__44 = _enumeration();
_SPACE__48 = _enumeration();
_SPACE__52 = _enumeration();
_SPACE__56 = _enumeration();
_SPACE__60 = _enumeration();
_SPACE__64 = _enumeration();
_SPACE__72 = _enumeration();
_SPACE__80 = _enumeration();
_SPACE__96 = _enumeration();

// BORDER RADIUSES

_BORDER_RADIUS__NONE = _enumeration();
_BORDER_RADIUS__SMALL = _enumeration();
_BORDER_RADIUS__BASE = _enumeration();
_BORDER_RADIUS__MEDIUM = _enumeration();
_BORDER_RADIUS__LARGE = _enumeration();
_BORDER_RADIUS__EXTRA_LARGE = _enumeration();
_BORDER_RADIUS__EXTRA_LARGE__2 = _enumeration();
_BORDER_RADIUS__EXTRA_LARGE__3 = _enumeration();
_BORDER_RADIUS__FULL = _enumeration();

// COLORS

/*
const css = `
--color--black: #000000;
--color--white: #ffffff;
--color--gray--blue--50: #f8fafc;
--color--gray--blue--100: #f1f5f9;
--color--gray--blue--200: #e2e8f0;
--color--gray--blue--300: #cbd5e1;
--color--gray--blue--400: #94a3b8;
--color--gray--blue--500: #64748b;
--color--gray--blue--600: #475569;
--color--gray--blue--700: #334155;
--color--gray--blue--800: #1e293b;
--color--gray--blue--900: #0f172a;
--color--gray--cool--50: #f9fafb;
--color--gray--cool--100: #f3f4f6;
--color--gray--cool--200: #e5e7eb;
--color--gray--cool--300: #d1d5db;
--color--gray--cool--400: #9ca3af;
--color--gray--cool--500: #6b7280;
--color--gray--cool--600: #4b5563;
--color--gray--cool--700: #374151;
--color--gray--cool--800: #1f2937;
--color--gray--cool--900: #111827;
--color--gray--medium--50: #fafafa;
--color--gray--medium--100: #f4f4f5;
--color--gray--medium--200: #e4e4e7;
--color--gray--medium--300: #d4d4d8;
--color--gray--medium--400: #a1a1aa;
--color--gray--medium--500: #71717a;
--color--gray--medium--600: #52525b;
--color--gray--medium--700: #3f3f46;
--color--gray--medium--800: #27272a;
--color--gray--medium--900: #18181b;
--color--gray--true--50: #fafafa;
--color--gray--true--100: #f5f5f5;
--color--gray--true--200: #e5e5e5;
--color--gray--true--300: #d4d4d4;
--color--gray--true--400: #a3a3a3;
--color--gray--true--500: #737373;
--color--gray--true--600: #525252;
--color--gray--true--700: #404040;
--color--gray--true--800: #262626;
--color--gray--true--900: #171717;
--color--gray--warm--50: #fafaf9;
--color--gray--warm--100: #f5f5f4;
--color--gray--warm--200: #e7e5e4;
--color--gray--warm--300: #d6d3d1;
--color--gray--warm--400: #a8a29e;
--color--gray--warm--500: #78716c;
--color--gray--warm--600: #57534e;
--color--gray--warm--700: #44403c;
--color--gray--warm--800: #292524;
--color--gray--warm--900: #1c1917;
--color--red--50: #fef2f2;
--color--red--100: #fee2e2;
--color--red--200: #fecaca;
--color--red--300: #fca5a5;
--color--red--400: #f87171;
--color--red--500: #ef4444;
--color--red--600: #dc2626;
--color--red--700: #b91c1c;
--color--red--800: #991b1b;
--color--red--900: #7f1d1d;
--color--orange--50: #fff7ed;
--color--orange--100: #ffedd5;
--color--orange--200: #fed7aa;
--color--orange--300: #fdba74;
--color--orange--400: #fb923c;
--color--orange--500: #f97316;
--color--orange--600: #ea580c;
--color--orange--700: #c2410c;
--color--orange--800: #9a3412;
--color--orange--900: #7c2d12;
--color--amber--50: #fffbeb;
--color--amber--100: #fef3c7;
--color--amber--200: #fde68a;
--color--amber--300: #fcd34d;
--color--amber--400: #fbbf24;
--color--amber--500: #f59e0b;
--color--amber--600: #d97706;
--color--amber--700: #b45309;
--color--amber--800: #92400e;
--color--amber--900: #78350f;
--color--yellow--50: #fefce8;
--color--yellow--100: #fef9c3;
--color--yellow--200: #fef08a;
--color--yellow--300: #fde047;
--color--yellow--400: #facc15;
--color--yellow--500: #eab308;
--color--yellow--600: #ca8a04;
--color--yellow--700: #a16207;
--color--yellow--800: #854d0e;
--color--yellow--900: #713f12;
--color--lime--50: #f7fee7;
--color--lime--100: #ecfccb;
--color--lime--200: #d9f99d;
--color--lime--300: #bef264;
--color--lime--400: #a3e635;
--color--lime--500: #84cc16;
--color--lime--600: #65a30d;
--color--lime--700: #4d7c0f;
--color--lime--800: #3f6212;
--color--lime--900: #365314;
--color--green--50: #f0fdf4;
--color--green--100: #dcfce7;
--color--green--200: #bbf7d0;
--color--green--300: #86efac;
--color--green--400: #4ade80;
--color--green--500: #22c55e;
--color--green--600: #16a34a;
--color--green--700: #15803d;
--color--green--800: #166534;
--color--green--900: #14532d;
--color--emerald--50: #ecfdf5;
--color--emerald--100: #d1fae5;
--color--emerald--200: #a7f3d0;
--color--emerald--300: #6ee7b7;
--color--emerald--400: #34d399;
--color--emerald--500: #10b981;
--color--emerald--600: #059669;
--color--emerald--700: #047857;
--color--emerald--800: #065f46;
--color--emerald--900: #064e3b;
--color--teal--50: #f0fdfa;
--color--teal--100: #ccfbf1;
--color--teal--200: #99f6e4;
--color--teal--300: #5eead4;
--color--teal--400: #2dd4bf;
--color--teal--500: #14b8a6;
--color--teal--600: #0d9488;
--color--teal--700: #0f766e;
--color--teal--800: #115e59;
--color--teal--900: #134e4a;
--color--cyan--50: #ecfeff;
--color--cyan--100: #cffafe;
--color--cyan--200: #a5f3fc;
--color--cyan--300: #67e8f9;
--color--cyan--400: #22d3ee;
--color--cyan--500: #06b6d4;
--color--cyan--600: #0891b2;
--color--cyan--700: #0e7490;
--color--cyan--800: #155e75;
--color--cyan--900: #164e63;
--color--sky--50: #f0f9ff;
--color--sky--100: #e0f2fe;
--color--sky--200: #bae6fd;
--color--sky--300: #7dd3fc;
--color--sky--400: #38bdf8;
--color--sky--500: #0ea5e9;
--color--sky--600: #0284c7;
--color--sky--700: #0369a1;
--color--sky--800: #075985;
--color--sky--900: #0c4a6e;
--color--blue--50: #eff6ff;
--color--blue--100: #dbeafe;
--color--blue--200: #bfdbfe;
--color--blue--300: #93c5fd;
--color--blue--400: #60a5fa;
--color--blue--500: #3b82f6;
--color--blue--600: #2563eb;
--color--blue--700: #1d4ed8;
--color--blue--800: #1e40af;
--color--blue--900: #1e3a8a;
--color--indigo--50: #eef2ff;
--color--indigo--100: #e0e7ff;
--color--indigo--200: #c7d2fe;
--color--indigo--300: #a5b4fc;
--color--indigo--400: #818cf8;
--color--indigo--500: #6366f1;
--color--indigo--600: #4f46e5;
--color--indigo--700: #4338ca;
--color--indigo--800: #3730a3;
--color--indigo--900: #312e81;
--color--violet--50: #f5f3ff;
--color--violet--100: #ede9fe;
--color--violet--200: #ddd6fe;
--color--violet--300: #c4b5fd;
--color--violet--400: #a78bfa;
--color--violet--500: #8b5cf6;
--color--violet--600: #7c3aed;
--color--violet--700: #6d28d9;
--color--violet--800: #5b21b6;
--color--violet--900: #4c1d95;
--color--purple--50: #faf5ff;
--color--purple--100: #f3e8ff;
--color--purple--200: #e9d5ff;
--color--purple--300: #d8b4fe;
--color--purple--400: #c084fc;
--color--purple--500: #a855f7;
--color--purple--600: #9333ea;
--color--purple--700: #7e22ce;
--color--purple--800: #6b21a8;
--color--purple--900: #581c87;
--color--fuchsia--50: #fdf4ff;
--color--fuchsia--100: #fae8ff;
--color--fuchsia--200: #f5d0fe;
--color--fuchsia--300: #f0abfc;
--color--fuchsia--400: #e879f9;
--color--fuchsia--500: #d946ef;
--color--fuchsia--600: #c026d3;
--color--fuchsia--700: #a21caf;
--color--fuchsia--800: #86198f;
--color--fuchsia--900: #701a75;
--color--pink--50: #fdf2f8;
--color--pink--100: #fce7f3;
--color--pink--200: #fbcfe8;
--color--pink--300: #f9a8d4;
--color--pink--400: #f472b6;
--color--pink--500: #ec4899;
--color--pink--600: #db2777;
--color--pink--700: #be185d;
--color--pink--800: #9d174d;
--color--pink--900: #831843;
--color--rose--50: #fff1f2;
--color--rose--100: #ffe4e6;
--color--rose--200: #fecdd3;
--color--rose--300: #fda4af;
--color--rose--400: #fb7185;
--color--rose--500: #f43f5e;
--color--rose--600: #e11d48;
--color--rose--700: #be123c;
--color--rose--800: #9f1239;
--color--rose--900: #881337;
`;

const colors = css
  .split("\n")
  .filter((line) => line.trim() !== "")
  .map((line) => {
    const [_, name, hexadecimal] = line
      .trim()
      .match(/^--color--(.*?): #(.*?);$/);
    const red = parseInt(hexadecimal.slice(0, 2), 16) / 255;
    const green = parseInt(hexadecimal.slice(2, 4), 16) / 255;
    const blue = parseInt(hexadecimal.slice(4, 6), 16) / 255;
    return { name: name.replaceAll("-", "_").toUpperCase(), red, green, blue };
  });

colors.unshift({
  name: "GRAY__REAPER",
  red: 233 / 255,
  green: 233 / 255,
  blue: 233 / 255,
});

for (const color of colors)
  console.log(`_COLOR__${color.name} = _enumeration();`);

for (const color of colors)
  console.log(
    `option == _COLOR__${color.name} ? ( gfx_r = ${color.red}; gfx_g = ${color.green}; gfx_b = ${color.blue}; ) :`
  );
*/

_COLOR__GRAY__REAPER = _enumeration();
_COLOR__BLACK = _enumeration();
_COLOR__WHITE = _enumeration();
_COLOR__GRAY__BLUE__50 = _enumeration();
_COLOR__GRAY__BLUE__100 = _enumeration();
_COLOR__GRAY__BLUE__200 = _enumeration();
_COLOR__GRAY__BLUE__300 = _enumeration();
_COLOR__GRAY__BLUE__400 = _enumeration();
_COLOR__GRAY__BLUE__500 = _enumeration();
_COLOR__GRAY__BLUE__600 = _enumeration();
_COLOR__GRAY__BLUE__700 = _enumeration();
_COLOR__GRAY__BLUE__800 = _enumeration();
_COLOR__GRAY__BLUE__900 = _enumeration();
_COLOR__GRAY__COOL__50 = _enumeration();
_COLOR__GRAY__COOL__100 = _enumeration();
_COLOR__GRAY__COOL__200 = _enumeration();
_COLOR__GRAY__COOL__300 = _enumeration();
_COLOR__GRAY__COOL__400 = _enumeration();
_COLOR__GRAY__COOL__500 = _enumeration();
_COLOR__GRAY__COOL__600 = _enumeration();
_COLOR__GRAY__COOL__700 = _enumeration();
_COLOR__GRAY__COOL__800 = _enumeration();
_COLOR__GRAY__COOL__900 = _enumeration();
_COLOR__GRAY__MEDIUM__50 = _enumeration();
_COLOR__GRAY__MEDIUM__100 = _enumeration();
_COLOR__GRAY__MEDIUM__200 = _enumeration();
_COLOR__GRAY__MEDIUM__300 = _enumeration();
_COLOR__GRAY__MEDIUM__400 = _enumeration();
_COLOR__GRAY__MEDIUM__500 = _enumeration();
_COLOR__GRAY__MEDIUM__600 = _enumeration();
_COLOR__GRAY__MEDIUM__700 = _enumeration();
_COLOR__GRAY__MEDIUM__800 = _enumeration();
_COLOR__GRAY__MEDIUM__900 = _enumeration();
_COLOR__GRAY__TRUE__50 = _enumeration();
_COLOR__GRAY__TRUE__100 = _enumeration();
_COLOR__GRAY__TRUE__200 = _enumeration();
_COLOR__GRAY__TRUE__300 = _enumeration();
_COLOR__GRAY__TRUE__400 = _enumeration();
_COLOR__GRAY__TRUE__500 = _enumeration();
_COLOR__GRAY__TRUE__600 = _enumeration();
_COLOR__GRAY__TRUE__700 = _enumeration();
_COLOR__GRAY__TRUE__800 = _enumeration();
_COLOR__GRAY__TRUE__900 = _enumeration();
_COLOR__GRAY__WARM__50 = _enumeration();
_COLOR__GRAY__WARM__100 = _enumeration();
_COLOR__GRAY__WARM__200 = _enumeration();
_COLOR__GRAY__WARM__300 = _enumeration();
_COLOR__GRAY__WARM__400 = _enumeration();
_COLOR__GRAY__WARM__500 = _enumeration();
_COLOR__GRAY__WARM__600 = _enumeration();
_COLOR__GRAY__WARM__700 = _enumeration();
_COLOR__GRAY__WARM__800 = _enumeration();
_COLOR__GRAY__WARM__900 = _enumeration();
_COLOR__RED__50 = _enumeration();
_COLOR__RED__100 = _enumeration();
_COLOR__RED__200 = _enumeration();
_COLOR__RED__300 = _enumeration();
_COLOR__RED__400 = _enumeration();
_COLOR__RED__500 = _enumeration();
_COLOR__RED__600 = _enumeration();
_COLOR__RED__700 = _enumeration();
_COLOR__RED__800 = _enumeration();
_COLOR__RED__900 = _enumeration();
_COLOR__ORANGE__50 = _enumeration();
_COLOR__ORANGE__100 = _enumeration();
_COLOR__ORANGE__200 = _enumeration();
_COLOR__ORANGE__300 = _enumeration();
_COLOR__ORANGE__400 = _enumeration();
_COLOR__ORANGE__500 = _enumeration();
_COLOR__ORANGE__600 = _enumeration();
_COLOR__ORANGE__700 = _enumeration();
_COLOR__ORANGE__800 = _enumeration();
_COLOR__ORANGE__900 = _enumeration();
_COLOR__AMBER__50 = _enumeration();
_COLOR__AMBER__100 = _enumeration();
_COLOR__AMBER__200 = _enumeration();
_COLOR__AMBER__300 = _enumeration();
_COLOR__AMBER__400 = _enumeration();
_COLOR__AMBER__500 = _enumeration();
_COLOR__AMBER__600 = _enumeration();
_COLOR__AMBER__700 = _enumeration();
_COLOR__AMBER__800 = _enumeration();
_COLOR__AMBER__900 = _enumeration();
_COLOR__YELLOW__50 = _enumeration();
_COLOR__YELLOW__100 = _enumeration();
_COLOR__YELLOW__200 = _enumeration();
_COLOR__YELLOW__300 = _enumeration();
_COLOR__YELLOW__400 = _enumeration();
_COLOR__YELLOW__500 = _enumeration();
_COLOR__YELLOW__600 = _enumeration();
_COLOR__YELLOW__700 = _enumeration();
_COLOR__YELLOW__800 = _enumeration();
_COLOR__YELLOW__900 = _enumeration();
_COLOR__LIME__50 = _enumeration();
_COLOR__LIME__100 = _enumeration();
_COLOR__LIME__200 = _enumeration();
_COLOR__LIME__300 = _enumeration();
_COLOR__LIME__400 = _enumeration();
_COLOR__LIME__500 = _enumeration();
_COLOR__LIME__600 = _enumeration();
_COLOR__LIME__700 = _enumeration();
_COLOR__LIME__800 = _enumeration();
_COLOR__LIME__900 = _enumeration();
_COLOR__GREEN__50 = _enumeration();
_COLOR__GREEN__100 = _enumeration();
_COLOR__GREEN__200 = _enumeration();
_COLOR__GREEN__300 = _enumeration();
_COLOR__GREEN__400 = _enumeration();
_COLOR__GREEN__500 = _enumeration();
_COLOR__GREEN__600 = _enumeration();
_COLOR__GREEN__700 = _enumeration();
_COLOR__GREEN__800 = _enumeration();
_COLOR__GREEN__900 = _enumeration();
_COLOR__EMERALD__50 = _enumeration();
_COLOR__EMERALD__100 = _enumeration();
_COLOR__EMERALD__200 = _enumeration();
_COLOR__EMERALD__300 = _enumeration();
_COLOR__EMERALD__400 = _enumeration();
_COLOR__EMERALD__500 = _enumeration();
_COLOR__EMERALD__600 = _enumeration();
_COLOR__EMERALD__700 = _enumeration();
_COLOR__EMERALD__800 = _enumeration();
_COLOR__EMERALD__900 = _enumeration();
_COLOR__TEAL__50 = _enumeration();
_COLOR__TEAL__100 = _enumeration();
_COLOR__TEAL__200 = _enumeration();
_COLOR__TEAL__300 = _enumeration();
_COLOR__TEAL__400 = _enumeration();
_COLOR__TEAL__500 = _enumeration();
_COLOR__TEAL__600 = _enumeration();
_COLOR__TEAL__700 = _enumeration();
_COLOR__TEAL__800 = _enumeration();
_COLOR__TEAL__900 = _enumeration();
_COLOR__CYAN__50 = _enumeration();
_COLOR__CYAN__100 = _enumeration();
_COLOR__CYAN__200 = _enumeration();
_COLOR__CYAN__300 = _enumeration();
_COLOR__CYAN__400 = _enumeration();
_COLOR__CYAN__500 = _enumeration();
_COLOR__CYAN__600 = _enumeration();
_COLOR__CYAN__700 = _enumeration();
_COLOR__CYAN__800 = _enumeration();
_COLOR__CYAN__900 = _enumeration();
_COLOR__SKY__50 = _enumeration();
_COLOR__SKY__100 = _enumeration();
_COLOR__SKY__200 = _enumeration();
_COLOR__SKY__300 = _enumeration();
_COLOR__SKY__400 = _enumeration();
_COLOR__SKY__500 = _enumeration();
_COLOR__SKY__600 = _enumeration();
_COLOR__SKY__700 = _enumeration();
_COLOR__SKY__800 = _enumeration();
_COLOR__SKY__900 = _enumeration();
_COLOR__BLUE__50 = _enumeration();
_COLOR__BLUE__100 = _enumeration();
_COLOR__BLUE__200 = _enumeration();
_COLOR__BLUE__300 = _enumeration();
_COLOR__BLUE__400 = _enumeration();
_COLOR__BLUE__500 = _enumeration();
_COLOR__BLUE__600 = _enumeration();
_COLOR__BLUE__700 = _enumeration();
_COLOR__BLUE__800 = _enumeration();
_COLOR__BLUE__900 = _enumeration();
_COLOR__INDIGO__50 = _enumeration();
_COLOR__INDIGO__100 = _enumeration();
_COLOR__INDIGO__200 = _enumeration();
_COLOR__INDIGO__300 = _enumeration();
_COLOR__INDIGO__400 = _enumeration();
_COLOR__INDIGO__500 = _enumeration();
_COLOR__INDIGO__600 = _enumeration();
_COLOR__INDIGO__700 = _enumeration();
_COLOR__INDIGO__800 = _enumeration();
_COLOR__INDIGO__900 = _enumeration();
_COLOR__VIOLET__50 = _enumeration();
_COLOR__VIOLET__100 = _enumeration();
_COLOR__VIOLET__200 = _enumeration();
_COLOR__VIOLET__300 = _enumeration();
_COLOR__VIOLET__400 = _enumeration();
_COLOR__VIOLET__500 = _enumeration();
_COLOR__VIOLET__600 = _enumeration();
_COLOR__VIOLET__700 = _enumeration();
_COLOR__VIOLET__800 = _enumeration();
_COLOR__VIOLET__900 = _enumeration();
_COLOR__PURPLE__50 = _enumeration();
_COLOR__PURPLE__100 = _enumeration();
_COLOR__PURPLE__200 = _enumeration();
_COLOR__PURPLE__300 = _enumeration();
_COLOR__PURPLE__400 = _enumeration();
_COLOR__PURPLE__500 = _enumeration();
_COLOR__PURPLE__600 = _enumeration();
_COLOR__PURPLE__700 = _enumeration();
_COLOR__PURPLE__800 = _enumeration();
_COLOR__PURPLE__900 = _enumeration();
_COLOR__FUCHSIA__50 = _enumeration();
_COLOR__FUCHSIA__100 = _enumeration();
_COLOR__FUCHSIA__200 = _enumeration();
_COLOR__FUCHSIA__300 = _enumeration();
_COLOR__FUCHSIA__400 = _enumeration();
_COLOR__FUCHSIA__500 = _enumeration();
_COLOR__FUCHSIA__600 = _enumeration();
_COLOR__FUCHSIA__700 = _enumeration();
_COLOR__FUCHSIA__800 = _enumeration();
_COLOR__FUCHSIA__900 = _enumeration();
_COLOR__PINK__50 = _enumeration();
_COLOR__PINK__100 = _enumeration();
_COLOR__PINK__200 = _enumeration();
_COLOR__PINK__300 = _enumeration();
_COLOR__PINK__400 = _enumeration();
_COLOR__PINK__500 = _enumeration();
_COLOR__PINK__600 = _enumeration();
_COLOR__PINK__700 = _enumeration();
_COLOR__PINK__800 = _enumeration();
_COLOR__PINK__900 = _enumeration();
_COLOR__ROSE__50 = _enumeration();
_COLOR__ROSE__100 = _enumeration();
_COLOR__ROSE__200 = _enumeration();
_COLOR__ROSE__300 = _enumeration();
_COLOR__ROSE__400 = _enumeration();
_COLOR__ROSE__500 = _enumeration();
_COLOR__ROSE__600 = _enumeration();
_COLOR__ROSE__700 = _enumeration();
_COLOR__ROSE__800 = _enumeration();
_COLOR__ROSE__900 = _enumeration();

// ERROR

_ERROR = -9999;

function _(option) (
  // FONT SIZES

  option == _FONT_SIZE__EXTRA_SMALL__2 ? gfx_ext_retina * 10 :
  option == _LINE_HEIGHT__EXTRA_SMALL__2 ? gfx_ext_retina * 14 :
  option == _FONT_SIZE__EXTRA_SMALL ? gfx_ext_retina * 12 :
  option == _LINE_HEIGHT__EXTRA_SMALL ? gfx_ext_retina * 16 :
  option == _FONT_SIZE__SMALL ? gfx_ext_retina * 14 :
  option == _LINE_HEIGHT__SMALL ? gfx_ext_retina * 20 :
  option == _FONT_SIZE__BASE ? gfx_ext_retina * 16 :
  option == _LINE_HEIGHT__BASE ? gfx_ext_retina * 24 :
  option == _FONT_SIZE__LARGE ? gfx_ext_retina * 18 :
  option == _LINE_HEIGHT__LARGE ? gfx_ext_retina * 28 :
  option == _FONT_SIZE__EXTRA_LARGE ? gfx_ext_retina * 20 :
  option == _LINE_HEIGHT__EXTRA_LARGE ? gfx_ext_retina * 28 :
  option == _FONT_SIZE__EXTRA_LARGE__2 ? gfx_ext_retina * 24 :
  option == _LINE_HEIGHT__EXTRA_LARGE__2 ? gfx_ext_retina * 32 :
  option == _FONT_SIZE__EXTRA_LARGE__3 ? gfx_ext_retina * 30 :
  option == _LINE_HEIGHT__EXTRA_LARGE__3 ? gfx_ext_retina * 36 :
  option == _FONT_SIZE__EXTRA_LARGE__4 ? gfx_ext_retina * 36 :
  option == _LINE_HEIGHT__EXTRA_LARGE__4 ? gfx_ext_retina * 40 :
  option == _FONT_SIZE__EXTRA_LARGE__5 ? gfx_ext_retina * 48 :
  option == _LINE_HEIGHT__EXTRA_LARGE__5 ? gfx_ext_retina * 1 :
  option == _FONT_SIZE__EXTRA_LARGE__6 ? gfx_ext_retina * 60 :
  option == _LINE_HEIGHT__EXTRA_LARGE__6 ? gfx_ext_retina * 1 :
  option == _FONT_SIZE__EXTRA_LARGE__7 ? gfx_ext_retina * 72 :
  option == _LINE_HEIGHT__EXTRA_LARGE__7 ? gfx_ext_retina * 1 :
  option == _FONT_SIZE__EXTRA_LARGE__8 ? gfx_ext_retina * 96 :
  option == _LINE_HEIGHT__EXTRA_LARGE__8 ? gfx_ext_retina * 1 :
  option == _FONT_SIZE__EXTRA_LARGE__9 ? gfx_ext_retina * 128 :
  option == _LINE_HEIGHT__EXTRA_LARGE__9 ? gfx_ext_retina * 1 :

  // FONT STYLES

  option == _FONT_STYLE__REGULAR ? '' :
  option == _FONT_STYLE__BOLD ? 'b' :
  option == _FONT_STYLE__ITALIC ? 'i' :
  option == _FONT_STYLE__BOLD_ITALIC ? 'bi' :

  // TEXT ALIGNMENTS

  option == _TEXT_ALIGN__HORIZONTAL__LEFT ? 0 :
  option == _TEXT_ALIGN__HORIZONTAL__CENTER ? 1 :
  option == _TEXT_ALIGN__HORIZONTAL__RIGHT ? 2 :
  option == _TEXT_ALIGN__VERTICAL__TOP ? 0 :
  option == _TEXT_ALIGN__VERTICAL__CENTER ? 4 :
  option == _TEXT_ALIGN__VERTICAL__BOTTOM ? 8 :
  option == _TEXT_ALIGN__OVERFLOW__VISIBLE ? 256 :

  // WIDTHS

  option == _WIDTH__0 ? gfx_ext_retina * 0 :
  option == _WIDTH__EXTRA_SMALL ? gfx_ext_retina * 320 :
  option == _WIDTH__SMALL ? gfx_ext_retina * 384 :
  option == _WIDTH__MEDIUM ? gfx_ext_retina * 448 :
  option == _WIDTH__LARGE ? gfx_ext_retina * 512 :
  option == _WIDTH__EXTRA_LARGE ? gfx_ext_retina * 576 :
  option == _WIDTH__EXTRA_LARGE__2 ? gfx_ext_retina * 672 :
  option == _WIDTH__EXTRA_LARGE__3 ? gfx_ext_retina * 768 :
  option == _WIDTH__EXTRA_LARGE__4 ? gfx_ext_retina * 896 :
  option == _WIDTH__EXTRA_LARGE__5 ? gfx_ext_retina * 1024 :
  option == _WIDTH__EXTRA_LARGE__6 ? gfx_ext_retina * 1152 :
  option == _WIDTH__EXTRA_LARGE__7 ? gfx_ext_retina * 1280 :
  option == _WIDTH__PROSE ? gfx_ext_retina * 546 :

  // SPACES

  option == _SPACE___96 ? gfx_ext_retina * -384 :
  option == _SPACE___80 ? gfx_ext_retina * -320 :
  option == _SPACE___72 ? gfx_ext_retina * -288 :
  option == _SPACE___64 ? gfx_ext_retina * -256 :
  option == _SPACE___60 ? gfx_ext_retina * -240 :
  option == _SPACE___56 ? gfx_ext_retina * -224 :
  option == _SPACE___52 ? gfx_ext_retina * -208 :
  option == _SPACE___48 ? gfx_ext_retina * -192 :
  option == _SPACE___44 ? gfx_ext_retina * -176 :
  option == _SPACE___40 ? gfx_ext_retina * -160 :
  option == _SPACE___36 ? gfx_ext_retina * -144 :
  option == _SPACE___32 ? gfx_ext_retina * -128 :
  option == _SPACE___28 ? gfx_ext_retina * -112 :
  option == _SPACE___24 ? gfx_ext_retina * -96 :
  option == _SPACE___20 ? gfx_ext_retina * -80 :
  option == _SPACE___16 ? gfx_ext_retina * -64 :
  option == _SPACE___14 ? gfx_ext_retina * -56 :
  option == _SPACE___12 ? gfx_ext_retina * -48 :
  option == _SPACE___11 ? gfx_ext_retina * -44 :
  option == _SPACE___10 ? gfx_ext_retina * -40 :
  option == _SPACE___9 ? gfx_ext_retina * -36 :
  option == _SPACE___8 ? gfx_ext_retina * -32 :
  option == _SPACE___7 ? gfx_ext_retina * -28 :
  option == _SPACE___6 ? gfx_ext_retina * -24 :
  option == _SPACE___5 ? gfx_ext_retina * -20 :
  option == _SPACE___4 ? gfx_ext_retina * -16 :
  option == _SPACE___3_5 ? gfx_ext_retina * -14 :
  option == _SPACE___3 ? gfx_ext_retina * -12 :
  option == _SPACE___2_5 ? gfx_ext_retina * -10 :
  option == _SPACE___2 ? gfx_ext_retina * -8 :
  option == _SPACE___1_5 ? gfx_ext_retina * -6 :
  option == _SPACE___1 ? gfx_ext_retina * -4 :
  option == _SPACE___0_5 ? gfx_ext_retina * -2 :
  option == _SPACE___PX ? gfx_ext_retina * -1 :
  option == _SPACE__0 ? gfx_ext_retina * 0 :
  option == _SPACE__PX ? gfx_ext_retina * 1 :
  option == _SPACE__0_5 ? gfx_ext_retina * 2 :
  option == _SPACE__1 ? gfx_ext_retina * 4 :
  option == _SPACE__1_5 ? gfx_ext_retina * 6 :
  option == _SPACE__2 ? gfx_ext_retina * 8 :
  option == _SPACE__2_5 ? gfx_ext_retina * 10 :
  option == _SPACE__3 ? gfx_ext_retina * 12 :
  option == _SPACE__3_5 ? gfx_ext_retina * 14 :
  option == _SPACE__4 ? gfx_ext_retina * 16 :
  option == _SPACE__5 ? gfx_ext_retina * 20 :
  option == _SPACE__6 ? gfx_ext_retina * 24 :
  option == _SPACE__7 ? gfx_ext_retina * 28 :
  option == _SPACE__8 ? gfx_ext_retina * 32 :
  option == _SPACE__9 ? gfx_ext_retina * 36 :
  option == _SPACE__10 ? gfx_ext_retina * 40 :
  option == _SPACE__11 ? gfx_ext_retina * 44 :
  option == _SPACE__12 ? gfx_ext_retina * 48 :
  option == _SPACE__14 ? gfx_ext_retina * 56 :
  option == _SPACE__16 ? gfx_ext_retina * 64 :
  option == _SPACE__20 ? gfx_ext_retina * 80 :
  option == _SPACE__24 ? gfx_ext_retina * 96 :
  option == _SPACE__28 ? gfx_ext_retina * 112 :
  option == _SPACE__32 ? gfx_ext_retina * 128 :
  option == _SPACE__36 ? gfx_ext_retina * 144 :
  option == _SPACE__40 ? gfx_ext_retina * 160 :
  option == _SPACE__44 ? gfx_ext_retina * 176 :
  option == _SPACE__48 ? gfx_ext_retina * 192 :
  option == _SPACE__52 ? gfx_ext_retina * 208 :
  option == _SPACE__56 ? gfx_ext_retina * 224 :
  option == _SPACE__60 ? gfx_ext_retina * 240 :
  option == _SPACE__64 ? gfx_ext_retina * 256 :
  option == _SPACE__72 ? gfx_ext_retina * 288 :
  option == _SPACE__80 ? gfx_ext_retina * 320 :
  option == _SPACE__96 ? gfx_ext_retina * 384 :

  // BORDER RADIUSES

  option == _BORDER_RADIUS__NONE ? gfx_ext_retina * 0 :
  option == _BORDER_RADIUS__SMALL ? gfx_ext_retina * 2 :
  option == _BORDER_RADIUS__BASE ? gfx_ext_retina * 4 :
  option == _BORDER_RADIUS__MEDIUM ? gfx_ext_retina * 6 :
  option == _BORDER_RADIUS__LARGE ? gfx_ext_retina * 8 :
  option == _BORDER_RADIUS__EXTRA_LARGE ? gfx_ext_retina * 12 :
  option == _BORDER_RADIUS__EXTRA_LARGE__2 ? gfx_ext_retina * 16 :
  option == _BORDER_RADIUS__EXTRA_LARGE__3 ? gfx_ext_retina * 24 :
  option == _BORDER_RADIUS__FULL ? gfx_ext_retina * 9999 :

  // COLORS

  option == _COLOR__GRAY__REAPER ? ( gfx_r = 0.9137254901960784; gfx_g = 0.9137254901960784; gfx_b = 0.9137254901960784; ) :
  option == _COLOR__BLACK ? ( gfx_r = 0; gfx_g = 0; gfx_b = 0; ) :
  option == _COLOR__WHITE ? ( gfx_r = 1; gfx_g = 1; gfx_b = 1; ) :
  option == _COLOR__GRAY__BLUE__50 ? ( gfx_r = 0.9725490196078431; gfx_g = 0.9803921568627451; gfx_b = 0.9882352941176471; ) :
  option == _COLOR__GRAY__BLUE__100 ? ( gfx_r = 0.9450980392156862; gfx_g = 0.9607843137254902; gfx_b = 0.9764705882352941; ) :
  option == _COLOR__GRAY__BLUE__200 ? ( gfx_r = 0.8862745098039215; gfx_g = 0.9098039215686274; gfx_b = 0.9411764705882353; ) :
  option == _COLOR__GRAY__BLUE__300 ? ( gfx_r = 0.796078431372549; gfx_g = 0.8352941176470589; gfx_b = 0.8823529411764706; ) :
  option == _COLOR__GRAY__BLUE__400 ? ( gfx_r = 0.5803921568627451; gfx_g = 0.6392156862745098; gfx_b = 0.7215686274509804; ) :
  option == _COLOR__GRAY__BLUE__500 ? ( gfx_r = 0.39215686274509803; gfx_g = 0.4549019607843137; gfx_b = 0.5450980392156862; ) :
  option == _COLOR__GRAY__BLUE__600 ? ( gfx_r = 0.2784313725490196; gfx_g = 0.3333333333333333; gfx_b = 0.4117647058823529; ) :
  option == _COLOR__GRAY__BLUE__700 ? ( gfx_r = 0.2; gfx_g = 0.2549019607843137; gfx_b = 0.3333333333333333; ) :
  option == _COLOR__GRAY__BLUE__800 ? ( gfx_r = 0.11764705882352941; gfx_g = 0.1607843137254902; gfx_b = 0.23137254901960785; ) :
  option == _COLOR__GRAY__BLUE__900 ? ( gfx_r = 0.058823529411764705; gfx_g = 0.09019607843137255; gfx_b = 0.16470588235294117; ) :
  option == _COLOR__GRAY__COOL__50 ? ( gfx_r = 0.9764705882352941; gfx_g = 0.9803921568627451; gfx_b = 0.984313725490196; ) :
  option == _COLOR__GRAY__COOL__100 ? ( gfx_r = 0.9529411764705882; gfx_g = 0.9568627450980393; gfx_b = 0.9647058823529412; ) :
  option == _COLOR__GRAY__COOL__200 ? ( gfx_r = 0.8980392156862745; gfx_g = 0.9058823529411765; gfx_b = 0.9215686274509803; ) :
  option == _COLOR__GRAY__COOL__300 ? ( gfx_r = 0.8196078431372549; gfx_g = 0.8352941176470589; gfx_b = 0.8588235294117647; ) :
  option == _COLOR__GRAY__COOL__400 ? ( gfx_r = 0.611764705882353; gfx_g = 0.6392156862745098; gfx_b = 0.6862745098039216; ) :
  option == _COLOR__GRAY__COOL__500 ? ( gfx_r = 0.4196078431372549; gfx_g = 0.4470588235294118; gfx_b = 0.5019607843137255; ) :
  option == _COLOR__GRAY__COOL__600 ? ( gfx_r = 0.29411764705882354; gfx_g = 0.3333333333333333; gfx_b = 0.38823529411764707; ) :
  option == _COLOR__GRAY__COOL__700 ? ( gfx_r = 0.21568627450980393; gfx_g = 0.2549019607843137; gfx_b = 0.3176470588235294; ) :
  option == _COLOR__GRAY__COOL__800 ? ( gfx_r = 0.12156862745098039; gfx_g = 0.1607843137254902; gfx_b = 0.21568627450980393; ) :
  option == _COLOR__GRAY__COOL__900 ? ( gfx_r = 0.06666666666666667; gfx_g = 0.09411764705882353; gfx_b = 0.15294117647058825; ) :
  option == _COLOR__GRAY__MEDIUM__50 ? ( gfx_r = 0.9803921568627451; gfx_g = 0.9803921568627451; gfx_b = 0.9803921568627451; ) :
  option == _COLOR__GRAY__MEDIUM__100 ? ( gfx_r = 0.9568627450980393; gfx_g = 0.9568627450980393; gfx_b = 0.9607843137254902; ) :
  option == _COLOR__GRAY__MEDIUM__200 ? ( gfx_r = 0.8941176470588236; gfx_g = 0.8941176470588236; gfx_b = 0.9058823529411765; ) :
  option == _COLOR__GRAY__MEDIUM__300 ? ( gfx_r = 0.8313725490196079; gfx_g = 0.8313725490196079; gfx_b = 0.8470588235294118; ) :
  option == _COLOR__GRAY__MEDIUM__400 ? ( gfx_r = 0.6313725490196078; gfx_g = 0.6313725490196078; gfx_b = 0.6666666666666666; ) :
  option == _COLOR__GRAY__MEDIUM__500 ? ( gfx_r = 0.44313725490196076; gfx_g = 0.44313725490196076; gfx_b = 0.47843137254901963; ) :
  option == _COLOR__GRAY__MEDIUM__600 ? ( gfx_r = 0.3215686274509804; gfx_g = 0.3215686274509804; gfx_b = 0.3568627450980392; ) :
  option == _COLOR__GRAY__MEDIUM__700 ? ( gfx_r = 0.24705882352941178; gfx_g = 0.24705882352941178; gfx_b = 0.27450980392156865; ) :
  option == _COLOR__GRAY__MEDIUM__800 ? ( gfx_r = 0.15294117647058825; gfx_g = 0.15294117647058825; gfx_b = 0.16470588235294117; ) :
  option == _COLOR__GRAY__MEDIUM__900 ? ( gfx_r = 0.09411764705882353; gfx_g = 0.09411764705882353; gfx_b = 0.10588235294117647; ) :
  option == _COLOR__GRAY__TRUE__50 ? ( gfx_r = 0.9803921568627451; gfx_g = 0.9803921568627451; gfx_b = 0.9803921568627451; ) :
  option == _COLOR__GRAY__TRUE__100 ? ( gfx_r = 0.9607843137254902; gfx_g = 0.9607843137254902; gfx_b = 0.9607843137254902; ) :
  option == _COLOR__GRAY__TRUE__200 ? ( gfx_r = 0.8980392156862745; gfx_g = 0.8980392156862745; gfx_b = 0.8980392156862745; ) :
  option == _COLOR__GRAY__TRUE__300 ? ( gfx_r = 0.8313725490196079; gfx_g = 0.8313725490196079; gfx_b = 0.8313725490196079; ) :
  option == _COLOR__GRAY__TRUE__400 ? ( gfx_r = 0.6392156862745098; gfx_g = 0.6392156862745098; gfx_b = 0.6392156862745098; ) :
  option == _COLOR__GRAY__TRUE__500 ? ( gfx_r = 0.45098039215686275; gfx_g = 0.45098039215686275; gfx_b = 0.45098039215686275; ) :
  option == _COLOR__GRAY__TRUE__600 ? ( gfx_r = 0.3215686274509804; gfx_g = 0.3215686274509804; gfx_b = 0.3215686274509804; ) :
  option == _COLOR__GRAY__TRUE__700 ? ( gfx_r = 0.25098039215686274; gfx_g = 0.25098039215686274; gfx_b = 0.25098039215686274; ) :
  option == _COLOR__GRAY__TRUE__800 ? ( gfx_r = 0.14901960784313725; gfx_g = 0.14901960784313725; gfx_b = 0.14901960784313725; ) :
  option == _COLOR__GRAY__TRUE__900 ? ( gfx_r = 0.09019607843137255; gfx_g = 0.09019607843137255; gfx_b = 0.09019607843137255; ) :
  option == _COLOR__GRAY__WARM__50 ? ( gfx_r = 0.9803921568627451; gfx_g = 0.9803921568627451; gfx_b = 0.9764705882352941; ) :
  option == _COLOR__GRAY__WARM__100 ? ( gfx_r = 0.9607843137254902; gfx_g = 0.9607843137254902; gfx_b = 0.9568627450980393; ) :
  option == _COLOR__GRAY__WARM__200 ? ( gfx_r = 0.9058823529411765; gfx_g = 0.8980392156862745; gfx_b = 0.8941176470588236; ) :
  option == _COLOR__GRAY__WARM__300 ? ( gfx_r = 0.8392156862745098; gfx_g = 0.8274509803921568; gfx_b = 0.8196078431372549; ) :
  option == _COLOR__GRAY__WARM__400 ? ( gfx_r = 0.6588235294117647; gfx_g = 0.6352941176470588; gfx_b = 0.6196078431372549; ) :
  option == _COLOR__GRAY__WARM__500 ? ( gfx_r = 0.47058823529411764; gfx_g = 0.44313725490196076; gfx_b = 0.4235294117647059; ) :
  option == _COLOR__GRAY__WARM__600 ? ( gfx_r = 0.3411764705882353; gfx_g = 0.3254901960784314; gfx_b = 0.3058823529411765; ) :
  option == _COLOR__GRAY__WARM__700 ? ( gfx_r = 0.26666666666666666; gfx_g = 0.25098039215686274; gfx_b = 0.23529411764705882; ) :
  option == _COLOR__GRAY__WARM__800 ? ( gfx_r = 0.1607843137254902; gfx_g = 0.1450980392156863; gfx_b = 0.1411764705882353; ) :
  option == _COLOR__GRAY__WARM__900 ? ( gfx_r = 0.10980392156862745; gfx_g = 0.09803921568627451; gfx_b = 0.09019607843137255; ) :
  option == _COLOR__RED__50 ? ( gfx_r = 0.996078431372549; gfx_g = 0.9490196078431372; gfx_b = 0.9490196078431372; ) :
  option == _COLOR__RED__100 ? ( gfx_r = 0.996078431372549; gfx_g = 0.8862745098039215; gfx_b = 0.8862745098039215; ) :
  option == _COLOR__RED__200 ? ( gfx_r = 0.996078431372549; gfx_g = 0.792156862745098; gfx_b = 0.792156862745098; ) :
  option == _COLOR__RED__300 ? ( gfx_r = 0.9882352941176471; gfx_g = 0.6470588235294118; gfx_b = 0.6470588235294118; ) :
  option == _COLOR__RED__400 ? ( gfx_r = 0.9725490196078431; gfx_g = 0.44313725490196076; gfx_b = 0.44313725490196076; ) :
  option == _COLOR__RED__500 ? ( gfx_r = 0.9372549019607843; gfx_g = 0.26666666666666666; gfx_b = 0.26666666666666666; ) :
  option == _COLOR__RED__600 ? ( gfx_r = 0.8627450980392157; gfx_g = 0.14901960784313725; gfx_b = 0.14901960784313725; ) :
  option == _COLOR__RED__700 ? ( gfx_r = 0.7254901960784313; gfx_g = 0.10980392156862745; gfx_b = 0.10980392156862745; ) :
  option == _COLOR__RED__800 ? ( gfx_r = 0.6; gfx_g = 0.10588235294117647; gfx_b = 0.10588235294117647; ) :
  option == _COLOR__RED__900 ? ( gfx_r = 0.4980392156862745; gfx_g = 0.11372549019607843; gfx_b = 0.11372549019607843; ) :
  option == _COLOR__ORANGE__50 ? ( gfx_r = 1; gfx_g = 0.9686274509803922; gfx_b = 0.9294117647058824; ) :
  option == _COLOR__ORANGE__100 ? ( gfx_r = 1; gfx_g = 0.9294117647058824; gfx_b = 0.8352941176470589; ) :
  option == _COLOR__ORANGE__200 ? ( gfx_r = 0.996078431372549; gfx_g = 0.8431372549019608; gfx_b = 0.6666666666666666; ) :
  option == _COLOR__ORANGE__300 ? ( gfx_r = 0.9921568627450981; gfx_g = 0.7294117647058823; gfx_b = 0.4549019607843137; ) :
  option == _COLOR__ORANGE__400 ? ( gfx_r = 0.984313725490196; gfx_g = 0.5725490196078431; gfx_b = 0.23529411764705882; ) :
  option == _COLOR__ORANGE__500 ? ( gfx_r = 0.9764705882352941; gfx_g = 0.45098039215686275; gfx_b = 0.08627450980392157; ) :
  option == _COLOR__ORANGE__600 ? ( gfx_r = 0.9176470588235294; gfx_g = 0.34509803921568627; gfx_b = 0.047058823529411764; ) :
  option == _COLOR__ORANGE__700 ? ( gfx_r = 0.7607843137254902; gfx_g = 0.2549019607843137; gfx_b = 0.047058823529411764; ) :
  option == _COLOR__ORANGE__800 ? ( gfx_r = 0.6039215686274509; gfx_g = 0.20392156862745098; gfx_b = 0.07058823529411765; ) :
  option == _COLOR__ORANGE__900 ? ( gfx_r = 0.48627450980392156; gfx_g = 0.17647058823529413; gfx_b = 0.07058823529411765; ) :
  option == _COLOR__AMBER__50 ? ( gfx_r = 1; gfx_g = 0.984313725490196; gfx_b = 0.9215686274509803; ) :
  option == _COLOR__AMBER__100 ? ( gfx_r = 0.996078431372549; gfx_g = 0.9529411764705882; gfx_b = 0.7803921568627451; ) :
  option == _COLOR__AMBER__200 ? ( gfx_r = 0.9921568627450981; gfx_g = 0.9019607843137255; gfx_b = 0.5411764705882353; ) :
  option == _COLOR__AMBER__300 ? ( gfx_r = 0.9882352941176471; gfx_g = 0.8274509803921568; gfx_b = 0.30196078431372547; ) :
  option == _COLOR__AMBER__400 ? ( gfx_r = 0.984313725490196; gfx_g = 0.7490196078431373; gfx_b = 0.1411764705882353; ) :
  option == _COLOR__AMBER__500 ? ( gfx_r = 0.9607843137254902; gfx_g = 0.6196078431372549; gfx_b = 0.043137254901960784; ) :
  option == _COLOR__AMBER__600 ? ( gfx_r = 0.8509803921568627; gfx_g = 0.4666666666666667; gfx_b = 0.023529411764705882; ) :
  option == _COLOR__AMBER__700 ? ( gfx_r = 0.7058823529411765; gfx_g = 0.3254901960784314; gfx_b = 0.03529411764705882; ) :
  option == _COLOR__AMBER__800 ? ( gfx_r = 0.5725490196078431; gfx_g = 0.25098039215686274; gfx_b = 0.054901960784313725; ) :
  option == _COLOR__AMBER__900 ? ( gfx_r = 0.47058823529411764; gfx_g = 0.20784313725490197; gfx_b = 0.058823529411764705; ) :
  option == _COLOR__YELLOW__50 ? ( gfx_r = 0.996078431372549; gfx_g = 0.9882352941176471; gfx_b = 0.9098039215686274; ) :
  option == _COLOR__YELLOW__100 ? ( gfx_r = 0.996078431372549; gfx_g = 0.9764705882352941; gfx_b = 0.7647058823529411; ) :
  option == _COLOR__YELLOW__200 ? ( gfx_r = 0.996078431372549; gfx_g = 0.9411764705882353; gfx_b = 0.5411764705882353; ) :
  option == _COLOR__YELLOW__300 ? ( gfx_r = 0.9921568627450981; gfx_g = 0.8784313725490196; gfx_b = 0.2784313725490196; ) :
  option == _COLOR__YELLOW__400 ? ( gfx_r = 0.9803921568627451; gfx_g = 0.8; gfx_b = 0.08235294117647059; ) :
  option == _COLOR__YELLOW__500 ? ( gfx_r = 0.9176470588235294; gfx_g = 0.7019607843137254; gfx_b = 0.03137254901960784; ) :
  option == _COLOR__YELLOW__600 ? ( gfx_r = 0.792156862745098; gfx_g = 0.5411764705882353; gfx_b = 0.01568627450980392; ) :
  option == _COLOR__YELLOW__700 ? ( gfx_r = 0.6313725490196078; gfx_g = 0.3843137254901961; gfx_b = 0.027450980392156862; ) :
  option == _COLOR__YELLOW__800 ? ( gfx_r = 0.5215686274509804; gfx_g = 0.30196078431372547; gfx_b = 0.054901960784313725; ) :
  option == _COLOR__YELLOW__900 ? ( gfx_r = 0.44313725490196076; gfx_g = 0.24705882352941178; gfx_b = 0.07058823529411765; ) :
  option == _COLOR__LIME__50 ? ( gfx_r = 0.9686274509803922; gfx_g = 0.996078431372549; gfx_b = 0.9058823529411765; ) :
  option == _COLOR__LIME__100 ? ( gfx_r = 0.9254901960784314; gfx_g = 0.9882352941176471; gfx_b = 0.796078431372549; ) :
  option == _COLOR__LIME__200 ? ( gfx_r = 0.8509803921568627; gfx_g = 0.9764705882352941; gfx_b = 0.615686274509804; ) :
  option == _COLOR__LIME__300 ? ( gfx_r = 0.7450980392156863; gfx_g = 0.9490196078431372; gfx_b = 0.39215686274509803; ) :
  option == _COLOR__LIME__400 ? ( gfx_r = 0.6392156862745098; gfx_g = 0.9019607843137255; gfx_b = 0.20784313725490197; ) :
  option == _COLOR__LIME__500 ? ( gfx_r = 0.5176470588235295; gfx_g = 0.8; gfx_b = 0.08627450980392157; ) :
  option == _COLOR__LIME__600 ? ( gfx_r = 0.396078431372549; gfx_g = 0.6392156862745098; gfx_b = 0.050980392156862744; ) :
  option == _COLOR__LIME__700 ? ( gfx_r = 0.30196078431372547; gfx_g = 0.48627450980392156; gfx_b = 0.058823529411764705; ) :
  option == _COLOR__LIME__800 ? ( gfx_r = 0.24705882352941178; gfx_g = 0.3843137254901961; gfx_b = 0.07058823529411765; ) :
  option == _COLOR__LIME__900 ? ( gfx_r = 0.21176470588235294; gfx_g = 0.3254901960784314; gfx_b = 0.0784313725490196; ) :
  option == _COLOR__GREEN__50 ? ( gfx_r = 0.9411764705882353; gfx_g = 0.9921568627450981; gfx_b = 0.9568627450980393; ) :
  option == _COLOR__GREEN__100 ? ( gfx_r = 0.8627450980392157; gfx_g = 0.9882352941176471; gfx_b = 0.9058823529411765; ) :
  option == _COLOR__GREEN__200 ? ( gfx_r = 0.7333333333333333; gfx_g = 0.9686274509803922; gfx_b = 0.8156862745098039; ) :
  option == _COLOR__GREEN__300 ? ( gfx_r = 0.5254901960784314; gfx_g = 0.9372549019607843; gfx_b = 0.6745098039215687; ) :
  option == _COLOR__GREEN__400 ? ( gfx_r = 0.2901960784313726; gfx_g = 0.8705882352941177; gfx_b = 0.5019607843137255; ) :
  option == _COLOR__GREEN__500 ? ( gfx_r = 0.13333333333333333; gfx_g = 0.7725490196078432; gfx_b = 0.3686274509803922; ) :
  option == _COLOR__GREEN__600 ? ( gfx_r = 0.08627450980392157; gfx_g = 0.6392156862745098; gfx_b = 0.2901960784313726; ) :
  option == _COLOR__GREEN__700 ? ( gfx_r = 0.08235294117647059; gfx_g = 0.5019607843137255; gfx_b = 0.23921568627450981; ) :
  option == _COLOR__GREEN__800 ? ( gfx_r = 0.08627450980392157; gfx_g = 0.396078431372549; gfx_b = 0.20392156862745098; ) :
  option == _COLOR__GREEN__900 ? ( gfx_r = 0.0784313725490196; gfx_g = 0.3254901960784314; gfx_b = 0.17647058823529413; ) :
  option == _COLOR__EMERALD__50 ? ( gfx_r = 0.9254901960784314; gfx_g = 0.9921568627450981; gfx_b = 0.9607843137254902; ) :
  option == _COLOR__EMERALD__100 ? ( gfx_r = 0.8196078431372549; gfx_g = 0.9803921568627451; gfx_b = 0.8980392156862745; ) :
  option == _COLOR__EMERALD__200 ? ( gfx_r = 0.6549019607843137; gfx_g = 0.9529411764705882; gfx_b = 0.8156862745098039; ) :
  option == _COLOR__EMERALD__300 ? ( gfx_r = 0.43137254901960786; gfx_g = 0.9058823529411765; gfx_b = 0.7176470588235294; ) :
  option == _COLOR__EMERALD__400 ? ( gfx_r = 0.20392156862745098; gfx_g = 0.8274509803921568; gfx_b = 0.6; ) :
  option == _COLOR__EMERALD__500 ? ( gfx_r = 0.06274509803921569; gfx_g = 0.7254901960784313; gfx_b = 0.5058823529411764; ) :
  option == _COLOR__EMERALD__600 ? ( gfx_r = 0.0196078431372549; gfx_g = 0.5882352941176471; gfx_b = 0.4117647058823529; ) :
  option == _COLOR__EMERALD__700 ? ( gfx_r = 0.01568627450980392; gfx_g = 0.47058823529411764; gfx_b = 0.3411764705882353; ) :
  option == _COLOR__EMERALD__800 ? ( gfx_r = 0.023529411764705882; gfx_g = 0.37254901960784315; gfx_b = 0.27450980392156865; ) :
  option == _COLOR__EMERALD__900 ? ( gfx_r = 0.023529411764705882; gfx_g = 0.3058823529411765; gfx_b = 0.23137254901960785; ) :
  option == _COLOR__TEAL__50 ? ( gfx_r = 0.9411764705882353; gfx_g = 0.9921568627450981; gfx_b = 0.9803921568627451; ) :
  option == _COLOR__TEAL__100 ? ( gfx_r = 0.8; gfx_g = 0.984313725490196; gfx_b = 0.9450980392156862; ) :
  option == _COLOR__TEAL__200 ? ( gfx_r = 0.6; gfx_g = 0.9647058823529412; gfx_b = 0.8941176470588236; ) :
  option == _COLOR__TEAL__300 ? ( gfx_r = 0.3686274509803922; gfx_g = 0.9176470588235294; gfx_b = 0.8313725490196079; ) :
  option == _COLOR__TEAL__400 ? ( gfx_r = 0.17647058823529413; gfx_g = 0.8313725490196079; gfx_b = 0.7490196078431373; ) :
  option == _COLOR__TEAL__500 ? ( gfx_r = 0.0784313725490196; gfx_g = 0.7215686274509804; gfx_b = 0.6509803921568628; ) :
  option == _COLOR__TEAL__600 ? ( gfx_r = 0.050980392156862744; gfx_g = 0.5803921568627451; gfx_b = 0.5333333333333333; ) :
  option == _COLOR__TEAL__700 ? ( gfx_r = 0.058823529411764705; gfx_g = 0.4627450980392157; gfx_b = 0.43137254901960786; ) :
  option == _COLOR__TEAL__800 ? ( gfx_r = 0.06666666666666667; gfx_g = 0.3686274509803922; gfx_b = 0.34901960784313724; ) :
  option == _COLOR__TEAL__900 ? ( gfx_r = 0.07450980392156863; gfx_g = 0.3058823529411765; gfx_b = 0.2901960784313726; ) :
  option == _COLOR__CYAN__50 ? ( gfx_r = 0.9254901960784314; gfx_g = 0.996078431372549; gfx_b = 1; ) :
  option == _COLOR__CYAN__100 ? ( gfx_r = 0.8117647058823529; gfx_g = 0.9803921568627451; gfx_b = 0.996078431372549; ) :
  option == _COLOR__CYAN__200 ? ( gfx_r = 0.6470588235294118; gfx_g = 0.9529411764705882; gfx_b = 0.9882352941176471; ) :
  option == _COLOR__CYAN__300 ? ( gfx_r = 0.403921568627451; gfx_g = 0.9098039215686274; gfx_b = 0.9764705882352941; ) :
  option == _COLOR__CYAN__400 ? ( gfx_r = 0.13333333333333333; gfx_g = 0.8274509803921568; gfx_b = 0.9333333333333333; ) :
  option == _COLOR__CYAN__500 ? ( gfx_r = 0.023529411764705882; gfx_g = 0.7137254901960784; gfx_b = 0.8313725490196079; ) :
  option == _COLOR__CYAN__600 ? ( gfx_r = 0.03137254901960784; gfx_g = 0.5686274509803921; gfx_b = 0.6980392156862745; ) :
  option == _COLOR__CYAN__700 ? ( gfx_r = 0.054901960784313725; gfx_g = 0.4549019607843137; gfx_b = 0.5647058823529412; ) :
  option == _COLOR__CYAN__800 ? ( gfx_r = 0.08235294117647059; gfx_g = 0.3686274509803922; gfx_b = 0.4588235294117647; ) :
  option == _COLOR__CYAN__900 ? ( gfx_r = 0.08627450980392157; gfx_g = 0.3058823529411765; gfx_b = 0.38823529411764707; ) :
  option == _COLOR__SKY__50 ? ( gfx_r = 0.9411764705882353; gfx_g = 0.9764705882352941; gfx_b = 1; ) :
  option == _COLOR__SKY__100 ? ( gfx_r = 0.8784313725490196; gfx_g = 0.9490196078431372; gfx_b = 0.996078431372549; ) :
  option == _COLOR__SKY__200 ? ( gfx_r = 0.7294117647058823; gfx_g = 0.9019607843137255; gfx_b = 0.9921568627450981; ) :
  option == _COLOR__SKY__300 ? ( gfx_r = 0.49019607843137253; gfx_g = 0.8274509803921568; gfx_b = 0.9882352941176471; ) :
  option == _COLOR__SKY__400 ? ( gfx_r = 0.2196078431372549; gfx_g = 0.7411764705882353; gfx_b = 0.9725490196078431; ) :
  option == _COLOR__SKY__500 ? ( gfx_r = 0.054901960784313725; gfx_g = 0.6470588235294118; gfx_b = 0.9137254901960784; ) :
  option == _COLOR__SKY__600 ? ( gfx_r = 0.00784313725490196; gfx_g = 0.5176470588235295; gfx_b = 0.7803921568627451; ) :
  option == _COLOR__SKY__700 ? ( gfx_r = 0.011764705882352941; gfx_g = 0.4117647058823529; gfx_b = 0.6313725490196078; ) :
  option == _COLOR__SKY__800 ? ( gfx_r = 0.027450980392156862; gfx_g = 0.34901960784313724; gfx_b = 0.5215686274509804; ) :
  option == _COLOR__SKY__900 ? ( gfx_r = 0.047058823529411764; gfx_g = 0.2901960784313726; gfx_b = 0.43137254901960786; ) :
  option == _COLOR__BLUE__50 ? ( gfx_r = 0.9372549019607843; gfx_g = 0.9647058823529412; gfx_b = 1; ) :
  option == _COLOR__BLUE__100 ? ( gfx_r = 0.8588235294117647; gfx_g = 0.9176470588235294; gfx_b = 0.996078431372549; ) :
  option == _COLOR__BLUE__200 ? ( gfx_r = 0.7490196078431373; gfx_g = 0.8588235294117647; gfx_b = 0.996078431372549; ) :
  option == _COLOR__BLUE__300 ? ( gfx_r = 0.5764705882352941; gfx_g = 0.7725490196078432; gfx_b = 0.9921568627450981; ) :
  option == _COLOR__BLUE__400 ? ( gfx_r = 0.3764705882352941; gfx_g = 0.6470588235294118; gfx_b = 0.9803921568627451; ) :
  option == _COLOR__BLUE__500 ? ( gfx_r = 0.23137254901960785; gfx_g = 0.5098039215686274; gfx_b = 0.9647058823529412; ) :
  option == _COLOR__BLUE__600 ? ( gfx_r = 0.1450980392156863; gfx_g = 0.38823529411764707; gfx_b = 0.9215686274509803; ) :
  option == _COLOR__BLUE__700 ? ( gfx_r = 0.11372549019607843; gfx_g = 0.3058823529411765; gfx_b = 0.8470588235294118; ) :
  option == _COLOR__BLUE__800 ? ( gfx_r = 0.11764705882352941; gfx_g = 0.25098039215686274; gfx_b = 0.6862745098039216; ) :
  option == _COLOR__BLUE__900 ? ( gfx_r = 0.11764705882352941; gfx_g = 0.22745098039215686; gfx_b = 0.5411764705882353; ) :
  option == _COLOR__INDIGO__50 ? ( gfx_r = 0.9333333333333333; gfx_g = 0.9490196078431372; gfx_b = 1; ) :
  option == _COLOR__INDIGO__100 ? ( gfx_r = 0.8784313725490196; gfx_g = 0.9058823529411765; gfx_b = 1; ) :
  option == _COLOR__INDIGO__200 ? ( gfx_r = 0.7803921568627451; gfx_g = 0.8235294117647058; gfx_b = 0.996078431372549; ) :
  option == _COLOR__INDIGO__300 ? ( gfx_r = 0.6470588235294118; gfx_g = 0.7058823529411765; gfx_b = 0.9882352941176471; ) :
  option == _COLOR__INDIGO__400 ? ( gfx_r = 0.5058823529411764; gfx_g = 0.5490196078431373; gfx_b = 0.9725490196078431; ) :
  option == _COLOR__INDIGO__500 ? ( gfx_r = 0.38823529411764707; gfx_g = 0.4; gfx_b = 0.9450980392156862; ) :
  option == _COLOR__INDIGO__600 ? ( gfx_r = 0.30980392156862746; gfx_g = 0.27450980392156865; gfx_b = 0.8980392156862745; ) :
  option == _COLOR__INDIGO__700 ? ( gfx_r = 0.2627450980392157; gfx_g = 0.2196078431372549; gfx_b = 0.792156862745098; ) :
  option == _COLOR__INDIGO__800 ? ( gfx_r = 0.21568627450980393; gfx_g = 0.18823529411764706; gfx_b = 0.6392156862745098; ) :
  option == _COLOR__INDIGO__900 ? ( gfx_r = 0.19215686274509805; gfx_g = 0.1803921568627451; gfx_b = 0.5058823529411764; ) :
  option == _COLOR__VIOLET__50 ? ( gfx_r = 0.9607843137254902; gfx_g = 0.9529411764705882; gfx_b = 1; ) :
  option == _COLOR__VIOLET__100 ? ( gfx_r = 0.9294117647058824; gfx_g = 0.9137254901960784; gfx_b = 0.996078431372549; ) :
  option == _COLOR__VIOLET__200 ? ( gfx_r = 0.8666666666666667; gfx_g = 0.8392156862745098; gfx_b = 0.996078431372549; ) :
  option == _COLOR__VIOLET__300 ? ( gfx_r = 0.7686274509803922; gfx_g = 0.7098039215686275; gfx_b = 0.9921568627450981; ) :
  option == _COLOR__VIOLET__400 ? ( gfx_r = 0.6549019607843137; gfx_g = 0.5450980392156862; gfx_b = 0.9803921568627451; ) :
  option == _COLOR__VIOLET__500 ? ( gfx_r = 0.5450980392156862; gfx_g = 0.3607843137254902; gfx_b = 0.9647058823529412; ) :
  option == _COLOR__VIOLET__600 ? ( gfx_r = 0.48627450980392156; gfx_g = 0.22745098039215686; gfx_b = 0.9294117647058824; ) :
  option == _COLOR__VIOLET__700 ? ( gfx_r = 0.42745098039215684; gfx_g = 0.1568627450980392; gfx_b = 0.8509803921568627; ) :
  option == _COLOR__VIOLET__800 ? ( gfx_r = 0.3568627450980392; gfx_g = 0.12941176470588237; gfx_b = 0.7137254901960784; ) :
  option == _COLOR__VIOLET__900 ? ( gfx_r = 0.2980392156862745; gfx_g = 0.11372549019607843; gfx_b = 0.5843137254901961; ) :
  option == _COLOR__PURPLE__50 ? ( gfx_r = 0.9803921568627451; gfx_g = 0.9607843137254902; gfx_b = 1; ) :
  option == _COLOR__PURPLE__100 ? ( gfx_r = 0.9529411764705882; gfx_g = 0.9098039215686274; gfx_b = 1; ) :
  option == _COLOR__PURPLE__200 ? ( gfx_r = 0.9137254901960784; gfx_g = 0.8352941176470589; gfx_b = 1; ) :
  option == _COLOR__PURPLE__300 ? ( gfx_r = 0.8470588235294118; gfx_g = 0.7058823529411765; gfx_b = 0.996078431372549; ) :
  option == _COLOR__PURPLE__400 ? ( gfx_r = 0.7529411764705882; gfx_g = 0.5176470588235295; gfx_b = 0.9882352941176471; ) :
  option == _COLOR__PURPLE__500 ? ( gfx_r = 0.6588235294117647; gfx_g = 0.3333333333333333; gfx_b = 0.9686274509803922; ) :
  option == _COLOR__PURPLE__600 ? ( gfx_r = 0.5764705882352941; gfx_g = 0.2; gfx_b = 0.9176470588235294; ) :
  option == _COLOR__PURPLE__700 ? ( gfx_r = 0.49411764705882355; gfx_g = 0.13333333333333333; gfx_b = 0.807843137254902; ) :
  option == _COLOR__PURPLE__800 ? ( gfx_r = 0.4196078431372549; gfx_g = 0.12941176470588237; gfx_b = 0.6588235294117647; ) :
  option == _COLOR__PURPLE__900 ? ( gfx_r = 0.34509803921568627; gfx_g = 0.10980392156862745; gfx_b = 0.5294117647058824; ) :
  option == _COLOR__FUCHSIA__50 ? ( gfx_r = 0.9921568627450981; gfx_g = 0.9568627450980393; gfx_b = 1; ) :
  option == _COLOR__FUCHSIA__100 ? ( gfx_r = 0.9803921568627451; gfx_g = 0.9098039215686274; gfx_b = 1; ) :
  option == _COLOR__FUCHSIA__200 ? ( gfx_r = 0.9607843137254902; gfx_g = 0.8156862745098039; gfx_b = 0.996078431372549; ) :
  option == _COLOR__FUCHSIA__300 ? ( gfx_r = 0.9411764705882353; gfx_g = 0.6705882352941176; gfx_b = 0.9882352941176471; ) :
  option == _COLOR__FUCHSIA__400 ? ( gfx_r = 0.9098039215686274; gfx_g = 0.4745098039215686; gfx_b = 0.9764705882352941; ) :
  option == _COLOR__FUCHSIA__500 ? ( gfx_r = 0.8509803921568627; gfx_g = 0.27450980392156865; gfx_b = 0.9372549019607843; ) :
  option == _COLOR__FUCHSIA__600 ? ( gfx_r = 0.7529411764705882; gfx_g = 0.14901960784313725; gfx_b = 0.8274509803921568; ) :
  option == _COLOR__FUCHSIA__700 ? ( gfx_r = 0.6352941176470588; gfx_g = 0.10980392156862745; gfx_b = 0.6862745098039216; ) :
  option == _COLOR__FUCHSIA__800 ? ( gfx_r = 0.5254901960784314; gfx_g = 0.09803921568627451; gfx_b = 0.5607843137254902; ) :
  option == _COLOR__FUCHSIA__900 ? ( gfx_r = 0.4392156862745098; gfx_g = 0.10196078431372549; gfx_b = 0.4588235294117647; ) :
  option == _COLOR__PINK__50 ? ( gfx_r = 0.9921568627450981; gfx_g = 0.9490196078431372; gfx_b = 0.9725490196078431; ) :
  option == _COLOR__PINK__100 ? ( gfx_r = 0.9882352941176471; gfx_g = 0.9058823529411765; gfx_b = 0.9529411764705882; ) :
  option == _COLOR__PINK__200 ? ( gfx_r = 0.984313725490196; gfx_g = 0.8117647058823529; gfx_b = 0.9098039215686274; ) :
  option == _COLOR__PINK__300 ? ( gfx_r = 0.9764705882352941; gfx_g = 0.6588235294117647; gfx_b = 0.8313725490196079; ) :
  option == _COLOR__PINK__400 ? ( gfx_r = 0.9568627450980393; gfx_g = 0.4470588235294118; gfx_b = 0.7137254901960784; ) :
  option == _COLOR__PINK__500 ? ( gfx_r = 0.9254901960784314; gfx_g = 0.2823529411764706; gfx_b = 0.6; ) :
  option == _COLOR__PINK__600 ? ( gfx_r = 0.8588235294117647; gfx_g = 0.15294117647058825; gfx_b = 0.4666666666666667; ) :
  option == _COLOR__PINK__700 ? ( gfx_r = 0.7450980392156863; gfx_g = 0.09411764705882353; gfx_b = 0.36470588235294116; ) :
  option == _COLOR__PINK__800 ? ( gfx_r = 0.615686274509804; gfx_g = 0.09019607843137255; gfx_b = 0.30196078431372547; ) :
  option == _COLOR__PINK__900 ? ( gfx_r = 0.5137254901960784; gfx_g = 0.09411764705882353; gfx_b = 0.2627450980392157; ) :
  option == _COLOR__ROSE__50 ? ( gfx_r = 1; gfx_g = 0.9450980392156862; gfx_b = 0.9490196078431372; ) :
  option == _COLOR__ROSE__100 ? ( gfx_r = 1; gfx_g = 0.8941176470588236; gfx_b = 0.9019607843137255; ) :
  option == _COLOR__ROSE__200 ? ( gfx_r = 0.996078431372549; gfx_g = 0.803921568627451; gfx_b = 0.8274509803921568; ) :
  option == _COLOR__ROSE__300 ? ( gfx_r = 0.9921568627450981; gfx_g = 0.6431372549019608; gfx_b = 0.6862745098039216; ) :
  option == _COLOR__ROSE__400 ? ( gfx_r = 0.984313725490196; gfx_g = 0.44313725490196076; gfx_b = 0.5215686274509804; ) :
  option == _COLOR__ROSE__500 ? ( gfx_r = 0.9568627450980393; gfx_g = 0.24705882352941178; gfx_b = 0.3686274509803922; ) :
  option == _COLOR__ROSE__600 ? ( gfx_r = 0.8823529411764706; gfx_g = 0.11372549019607843; gfx_b = 0.2823529411764706; ) :
  option == _COLOR__ROSE__700 ? ( gfx_r = 0.7450980392156863; gfx_g = 0.07058823529411765; gfx_b = 0.23529411764705882; ) :
  option == _COLOR__ROSE__800 ? ( gfx_r = 0.6235294117647059; gfx_g = 0.07058823529411765; gfx_b = 0.2235294117647059; ) :
  option == _COLOR__ROSE__900 ? ( gfx_r = 0.5333333333333333; gfx_g = 0.07450980392156863; gfx_b = 0.21568627450980393; ) :

  // ERROR

  option == _ERROR ? _ERROR :
  _ERROR;
);

// STYLES SETTERS

function _font(size, style) (
  gfx_setfont(1, "Arial", _(size), _(style));
);

function _background_color(option) local(old_red, old_green, old_blue) (
  old_red = gfx_r; old_green = gfx_g; old_blue = gfx_b;
  _(option);
  gfx_clear = gfx_r * 255 + gfx_g * 255 * 256 + gfx_b * 255 * 65536;
  gfx_r = old_red; gfx_g = old_green; gfx_b = old_blue;
);

// DRAWING FUNCTIONS

function _rounded_rectangle_fill(x, y, width, height, radius) (
  radius = min(min(radius, width / 2), height / 2);
  gfx_rect(x + radius, y, width - radius * 2, height);
  gfx_rect(x, y + radius, width, height - radius * 2);
  gfx_circle(x + radius, y + radius, radius, 1);
  gfx_circle(x + width - radius - 1, y + radius, radius, 1);
  gfx_circle(x + radius, y + height - radius - 1, radius, 1);
  gfx_circle(x + width - radius - 1, y + height - radius - 1, radius, 1);
);

// INITIALIZERS

function _initialize_gfx() (
  _font(_FONT_SIZE__EXTRA_SMALL__2, _FONT_STYLE__REGULAR);
  _background_color(_COLOR__GRAY__REAPER);
);
