desc:leafac_Compressor

import leafac.jsfx-inc

@init

_.init();

samples.in = _.circular_buffer.new(_.milliseconds_to_samples(2000));
rms = _.rms.new(_.milliseconds_to_samples(300));
rmss = _.circular_buffer.new(_.milliseconds_to_samples(2000));
gain_reductions = _.circular_buffer.new(_.milliseconds_to_samples(2000));
samples.out = _.circular_buffer.new(_.milliseconds_to_samples(2000));

@slider

threshold = _.db_to_amplitude(-36);

@sample

_.rms.push(rms, spl0);
sample.rms = _.rms.get(rms);
sample.gain_reduction =
  sample.rms < threshold
  ? 1
  : threshold / sample.rms;
sample.out = sample.gain_reduction * spl0;

_.circular_buffer.push(samples.in, spl0);
_.circular_buffer.push(rmss, sample.rms * 10);
_.circular_buffer.push(gain_reductions, sample.gain_reduction);
_.circular_buffer.push(samples.out, sample.out);

spl0 = spl1 = sample.out;

@gfx 600 300

gfx_set(0.5, 0.5, 0.5);
_.graphs.line(samples.in, 0, 0, 600 * gfx_ext_retina, 300 * gfx_ext_retina, 1);

gfx_set(1, 1, 1);
_.graphs.line(samples.out, 0, 0, 600 * gfx_ext_retina, 300 * gfx_ext_retina, 1);

gfx_set(1, 0, 0);
_.graphs.line(rmss, 0, 0, 600 * gfx_ext_retina, 300 * gfx_ext_retina, 3);

gfx_set(0, 0, 1);
_.graphs.line(gain_reductions, 0, 0, 600 * gfx_ext_retina, 300 * gfx_ext_retina, 3);
